/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facturacion;


import Main.Main;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Jefferson
 */
public class Contratos extends javax.swing.JInternalFrame {

    String driver = "org.postgresql.Driver";
    String ruta = "jdbc:postgresql://localhost:5432/AutoCar";
    String user = "postgres";
    String password = "12345"; 
    DefaultTableModel modelo;
    /**
     * Creates new form Cliente
     */
    public Contratos() throws ClassNotFoundException, SQLException {
        initComponents();
        cargarTodos();
        tr=new TableRowSorter<>(modelo);
    }
 
    TableRowSorter<TableModel> tr;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        coCedula = new javax.swing.JTextField();
        coPlaca = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        coFir = new javax.swing.JCheckBox();
        coFechaIni = new com.github.lgooddatepicker.components.DatePicker();
        coFechaFin = new com.github.lgooddatepicker.components.DatePicker();
        coKilo = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        coDias = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        cliEditBuscar = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        coFechaFinEdit = new com.github.lgooddatepicker.components.DatePicker();
        coFechaIniEdit = new com.github.lgooddatepicker.components.DatePicker();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        coFirEdit = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();
        coKiloEdit = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        coMesesEdit = new javax.swing.JTextField();
        coExpirado = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cliTabla = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        filter = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();

        setClosable(true);

        jPanel2.setBackground(new java.awt.Color(50, 93, 127));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Agregar contrato");
        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        coCedula.setName(""); // NOI18N
        coCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coCedulaActionPerformed(evt);
            }
        });

        coPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coPlacaActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Agregar");

        jLabel3.setText("Cedula");

        jLabel6.setText("Placa");

        jLabel7.setText("Fecha de inicio");

        jLabel8.setText("Fecha de expiración");

        jLabel9.setText("Firmado");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/deny.png"))); // NOI18N
        jButton8.setText("Cancelar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        coKilo.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, null, 1.0d));

        jLabel10.setText("Kilómetros");

        coDias.setEditable(false);
        coDias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coDiasMouseClicked(evt);
            }
        });
        coDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coDiasActionPerformed(evt);
            }
        });

        jLabel19.setText("Días");

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel19))
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coDias, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coKilo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coFir)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(coCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, Short.MAX_VALUE)
                                            .addComponent(jButton9))
                                        .addComponent(coPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(coFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(coCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(coFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(coFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coFir, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(coKilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(coDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jLabel2)))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(21, 21, 21))
        );

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/contrato.png"))); // NOI18N
        jLabel17.setText("jLabel17");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 137, Short.MAX_VALUE)
                .addGap(144, 144, 144))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel17)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nuevo", jPanel4);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        cliEditBuscar.setText("Cedula");
        cliEditBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cliEditBuscarMouseClicked(evt);
            }
        });
        cliEditBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cliEditBuscarActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Editar Contrato");
        jLabel4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Editar");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/deny.png"))); // NOI18N
        jButton6.setText("Cancelar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel20.setText("Fecha de inicio");

        coFechaFinEdit.setEnabled(false);

        coFechaIniEdit.setEnabled(false);

        jLabel21.setText("Fecha de expiración");

        jLabel22.setText("Firmado");

        coFirEdit.setDoubleBuffered(true);
        coFirEdit.setEnabled(false);

        jLabel23.setText("Kilómetros");

        coKiloEdit.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, null, 1.0d));
        coKiloEdit.setDoubleBuffered(true);
        coKiloEdit.setEnabled(false);

        jLabel24.setText("Días");

        coMesesEdit.setDoubleBuffered(true);
        coMesesEdit.setEnabled(false);
        coMesesEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coMesesEditMouseClicked(evt);
            }
        });

        coExpirado.setEnabled(false);

        jLabel11.setText("Expirado");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(35, 35, 35)
                                .addComponent(coFechaIniEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel11))
                                        .addGap(57, 57, 57))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coFirEdit)
                                    .addComponent(coFechaFinEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coKiloEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coMesesEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coExpirado))))))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(coFechaIniEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coFechaFinEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(coFirEdit)
                    .addComponent(jLabel22))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(coKiloEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(coMesesEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(coExpirado)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6)
                        .addComponent(jLabel5))
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        jButton4.setText("Borrar contrato");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cliEditBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cliEditBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Editar", jPanel6);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        cliTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cédula", "Nombre", "Dirección", "Ciudad", "Correo", "Telefono"
            }
        ));
        cliTabla.setEnabled(false);
        cliTabla.setRowHeight(25);
        cliTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cliTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(cliTabla);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refresh.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        jLabel16.setText("Filtrar");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/filter.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultas", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cliTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cliTablaMouseClicked
        
    }//GEN-LAST:event_cliTablaMouseClicked

    private void coPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coPlacaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int firma=0;
        if(coFir.isSelected()){
            firma=1;
        }else{
            firma=2;
        }
        try {
            guardarContrato(coCedula.getText(), coPlaca.getText(), coFechaIni.getText(),coFechaFin.getText(),  firma,Double.parseDouble(coKilo.getValue().toString()),Integer.parseInt(coDias.getText()));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int firma=0;
        int expira=0;
        if(coFirEdit.isSelected()){
            firma=1;
        }
        if(coExpirado.isSelected()){
            expira=1;
        }
        try {
            editar(coFechaIniEdit.getText(),coFechaFinEdit.getText(),firma, Double.parseDouble(coKiloEdit.getValue().toString()),Integer.parseInt(coMesesEdit.getText()),expira);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            tr.setRowFilter(null);
            cargarTodos();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(!cliEditBuscar.getText().equals("")){
             try {
            buscar(cliEditBuscar.getText());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"AVISO: Ingrese una cédula");
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cliEditBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cliEditBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cliEditBuscarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(!cliEditBuscar.getText().equals("")){
            try {
            eliminarContrato(cliEditBuscar.getText());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"AVISO: Ingrese una cédula");
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cliEditBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cliEditBuscarMouseClicked
        cliEditBuscar.setText("");
    }//GEN-LAST:event_cliEditBuscarMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        coFechaIniEdit.setText("");
        coFechaFinEdit.setText("");
        coFirEdit.setText("");
        coKiloEdit.setValue(0);
        coMesesEdit.setText("");
        //Deshabilitar
        coFechaIniEdit.setEnabled(false);
        coFechaFinEdit.setEnabled(false);
        coFirEdit.setEnabled(false);
        coKiloEdit.setEnabled(false);
        coMesesEdit.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        
    }//GEN-LAST:event_filterActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
         String filtro=filter.getText();
        if(!filtro.equals("")){
             
             cliTabla.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(filtro));
        }else{
            tr.setRowFilter(null);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        coCedula.setText("");
        coPlaca.setText("");
        coFechaFin.setText("");
        coFechaIni.setText("");
        coFir.setText("");
        coKilo.setValue(0);
        coDias.setText("");
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void coDiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coDiasMouseClicked
          if(coFechaIni.getText().equals("")&&coFechaFin.getText().equals("")){
           JOptionPane.showMessageDialog(null, "Aviso: Seleccione las fechas de inicio y expiración");
       }else{
             try {
                 coDias.setText(String.valueOf(diasDiferencia()));
             } catch (ParseException ex) {
                 Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
             }
       }
      
        
    }//GEN-LAST:event_coDiasMouseClicked

    private void coDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coDiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coDiasActionPerformed

    private void coMesesEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coMesesEditMouseClicked
         if(coFechaIniEdit.getText().equals("")&&coFechaFinEdit.getText().equals("")){
           JOptionPane.showMessageDialog(null, "Aviso: Seleccione las fechas de inicio y expiración");
       }else{
             try {
                coMesesEdit.setText(String.valueOf(diasDiferenciaEdit()));
             } catch (ParseException ex) {
                 Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
             }
       }
    }//GEN-LAST:event_coMesesEditMouseClicked

    private void coCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coCedulaActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
           try {                                         
            try {
                Main m = new Main();
                
            } catch (SQLException ex) {
                Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }  catch (ClassNotFoundException ex) {
                   Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
               }
            AddCliente w = new AddCliente(new Main(),true);
            w.setVisible(true);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Contratos.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton9ActionPerformed
   public boolean existeCliente(String cedula) throws ClassNotFoundException, SQLException{
     String nombre ="";
       Class.forName(driver);
       Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM clientes WHERE cedula='"+cedula+"'");
            while (rs.next())
            {
               nombre = rs.getString(3);
              
            }
            rs.close();
            st.close();
            conn.close();
            if(!nombre.equals("")){
                return true;
                
            }else{
                return false;
            }
           
            
        }
   }
    public boolean existePlacaDisponible(String placa) throws ClassNotFoundException, SQLException{
    Class.forName(driver);
        String comprobador="";
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM autos WHERE placa='"+placa+"'");
            while (rs.next())
            {
                comprobador=rs.getString(2);
            }
            rs.close();
            st.close();
            conn.close();
            if(!comprobador.equals("")){
                return true;
            }else{
                return false;
            }
            
        }
}
public boolean existePlacaContratada(String placa) throws ClassNotFoundException, SQLException{
    Class.forName(driver);
        String comprobador="";
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos WHERE placa='"+placa+"' AND token=0");
            while (rs.next())
            {
                comprobador=rs.getString(2);
            }
            rs.close();
            st.close();
            conn.close();
            if(!comprobador.equals("")){
                return true;
            }else{
                return false;
            }
            
        }
}
    public int diasDiferencia() throws ParseException{
         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
 
        Date fechaInicial=dateFormat.parse(coFechaIni.getDate().toString());
        Date fechaFinal=dateFormat.parse(coFechaFin.getDate().toString());
 
        int diferencia=(int) ((fechaFinal.getTime()-fechaInicial.getTime())/1000);
 
        int dias=0;
     
        if(diferencia>86400) {
            dias=(int)Math.floor(diferencia/86400);
            diferencia=diferencia-(dias*86400);
        }
        return dias;
    }
      public int diasDiferenciaEdit() throws ParseException{
         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
 
        Date fechaInicial=dateFormat.parse(coFechaIniEdit.getDate().toString());
        Date fechaFinal=dateFormat.parse(coFechaFinEdit.getDate().toString());
 
        int diferencia=(int) ((fechaFinal.getTime()-fechaInicial.getTime())/1000);
 
        int dias=0;
     
        if(diferencia>86400) {
            dias=(int)Math.floor(diferencia/86400);
            diferencia=diferencia-(dias*86400);
        }
        return dias;
    }
    public void guardarContrato(String cedula, String placa, String fechaIni,String fechaFin, Integer firmado,double kilometros, Integer meses) throws ClassNotFoundException, SQLException{
        if(existeCliente(cedula)){
            if(existePlacaDisponible(placa)==true){
                if(existePlacaContratada(placa)==false){
                    try{
                       Class.forName(driver);
                       Connection conne=(Connection) DriverManager.getConnection(ruta,user,password);
                       Statement consulta=(Statement) conne.createStatement();
                       if(existe(cedula)){
                            JOptionPane.showMessageDialog(null,"Error: Ya existe un contrato con ese C.I.");
                       }else{
                           consulta.executeUpdate("insert into contratos(cedula, placa, fecha_inicio,fecha_fin, token,firmado,kilometros,meses,facturado) values('"+cedula+"', '"+placa+"', '"+coFechaIni.getDate().format(DateTimeFormatter.ISO_DATE)+"','"+coFechaFin.getDate().format(DateTimeFormatter.ISO_DATE)+"',"+0+","+firmado+","+kilometros+","+meses+","+0+")");
                           JOptionPane.showMessageDialog(null,"Contrato guardado con éxito");
                            coCedula.setText("");
                            coPlaca.setText("");

                       }

                    } catch(SQLException e){
                       JOptionPane.showMessageDialog(null,"Error desconocido. Contácte con administrador");

                   } catch(ClassNotFoundException e){
                       JOptionPane.showMessageDialog(null,"Error inesperado");
                } 
                                    }else{
                    JOptionPane.showMessageDialog(null, "Error: Ya existe un contrato con esa placa"); 
                }
               
            }else{
                JOptionPane.showMessageDialog(null, "Error: No existe un auto con esa placa");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Error: No existe un cliente con esa cèdula");
        }
        

   }
    public void cargarTodos() throws ClassNotFoundException, SQLException{
        Class.forName(driver);
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        String Titulo[]={"Cédula","Placa","Fecha de inicio","Fecha de expiración","Firmado","Kilometros","Días","Expirado"};
        String registros[]=new String[8];
        modelo= new DefaultTableModel(null,Titulo);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos");
            while (rs.next())
            {
                registros[0]=rs.getString(2);
                registros[1]=rs.getString(3);
                registros[2]=rs.getString(4);
                registros[3]=rs.getString(5);
                if(Integer.parseInt(rs.getString(7))==1){
                    registros[4]="Sí";
                }else{
                    registros[4]="No";
                }
                Double toBeTruncated = Double.parseDouble(rs.getString(8));

                Double truncatedDouble = BigDecimal.valueOf(toBeTruncated)
                    .setScale(3, RoundingMode.HALF_UP)
                    .doubleValue();
                registros[5]= truncatedDouble.toString();
                registros[6]=rs.getString(9);
                 if(Integer.parseInt(rs.getString(6))==1){
                    registros[7]="Sí";
                }else if(Integer.parseInt(rs.getString(6))==0){
                    registros[7]="No";
                }
                
                
               
                modelo.addRow(registros);
            }
            cliTabla.setModel(modelo);
            rs.close();
            st.close();conn.close();
        }
        
    }
    public boolean existe(String cedula) throws ClassNotFoundException, SQLException{
        Class.forName(driver);
        String comprobador="";
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos WHERE cedula='"+cedula+"'");
            while (rs.next())
            {
                if(Integer.parseInt(rs.getString(6))!=1){
                    comprobador=rs.getString(2);
                }
               
            }
            rs.close();
            st.close();
            conn.close();
            if(!comprobador.equals("")){
                return true;
            }else{
                return false;
            }
         
         }
         
    }
    public void buscar(String cedula) throws ClassNotFoundException, SQLException{
        if(estaFacturado(cedula)[0]==1&&estaFacturado(cedula)[1]==0){
             Class.forName(driver);
        String comprobador="";
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos WHERE cedula='"+cedula+"'");
            while (rs.next())
            {
                if(Integer.parseInt(rs.getString(6))!=1){
                       comprobador=rs.getString(2);
                       coFechaIniEdit.setDate(LocalDate.parse(rs.getString(4)));
                       coFechaFinEdit.setDate(LocalDate.parse(rs.getString(5)));
                       if(Integer.parseInt(rs.getString(7))==1){
                            coFirEdit.setSelected(true);
                       }else{
                           coFirEdit.setSelected(false);
                       }
                        Double toBeTruncated = Double.parseDouble(rs.getString(8));

                        Double truncatedDouble = BigDecimal.valueOf(toBeTruncated)
                            .setScale(3, RoundingMode.HALF_UP)
                            .doubleValue();
                       coKiloEdit.setValue(truncatedDouble);
                        coMesesEdit.setText(rs.getString(9));
                       if(Integer.parseInt(rs.getString(6))==1){
                             coExpirado.setSelected(true);
                        }else{
                            coExpirado.setSelected(false);
                        }
                }
            }
            cliTabla.setModel(modelo);
            st.close();
            conn.close();
            rs.close();
            if(!comprobador.equals("")){
                coExpirado.setEnabled(true);
                coFechaIniEdit.setEnabled(false);
                coFechaFinEdit.setEnabled(false);
                coFirEdit.setEnabled(false);
                coKiloEdit.setEnabled(false);
                coMesesEdit.setEnabled(false);
            }else{
                JOptionPane.showMessageDialog(null,"Aviso: No se encontró un cliente con ese C.I. o ya se encuentra expirado.");
            }
            
        }
        }else{
             Class.forName(driver);
        String comprobador="";
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos WHERE cedula='"+cedula+"'");
            while (rs.next())
            {
                if(Integer.parseInt(rs.getString(6))!=1){
                       comprobador=rs.getString(2);
                       coFechaIniEdit.setDate(LocalDate.parse(rs.getString(4)));
                       coFechaFinEdit.setDate(LocalDate.parse(rs.getString(5)));
                       if(Integer.parseInt(rs.getString(7))==1){
                            coFirEdit.setSelected(true);
                       }else{
                           coFirEdit.setSelected(false);
                       }
                        Double toBeTruncated = Double.parseDouble(rs.getString(8));

                        Double truncatedDouble = BigDecimal.valueOf(toBeTruncated)
                            .setScale(3, RoundingMode.HALF_UP)
                            .doubleValue();
                       coKiloEdit.setValue(truncatedDouble);
                        coMesesEdit.setText(rs.getString(9));
                       if(Integer.parseInt(rs.getString(6))==1){
                             coExpirado.setSelected(true);
                        }else{
                            coExpirado.setSelected(false);
                        }
                }
            }
            cliTabla.setModel(modelo);
            st.close();
            conn.close();
            rs.close();
            if(!comprobador.equals("")){
                coFechaIniEdit.setEnabled(true);
                coFechaFinEdit.setEnabled(true);
                coFirEdit.setEnabled(true);
                coKiloEdit.setEnabled(true);
              
                coExpirado.setEnabled(true);
                
            }else{
                JOptionPane.showMessageDialog(null,"Aviso: No se encontró un cliente con ese C.I. o ya se encuentra expirado.");
            }
            
        }
        }
       
    }
    public int[] estaFacturado(String cedula) throws ClassNotFoundException, SQLException{
         Class.forName(driver);
         int [] retorno = new int[2];
         retorno[0]=-1;retorno[1]=-1;
        String comprobador="";
         int dialogButton = JOptionPane.YES_NO_OPTION;
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos WHERE cedula='"+cedula+"' AND token=0" );
            while (rs.next())
            {
                if(Integer.parseInt(rs.getString(10))==1){
                    retorno[0]=1;
                    retorno [1]=0;
                    return retorno;
                }
               
            }
           
            st.close();
            conn.close();
            rs.close();
          return retorno;
    }
    }
    public boolean tieneExpirados(String cedula) throws ClassNotFoundException, SQLException{
        Class.forName(driver);
        String comprobador="";
         int dialogButton = JOptionPane.YES_NO_OPTION;
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        try (Statement st = conn.createStatement()) {
            ResultSet rs = st.executeQuery("SELECT * FROM contratos WHERE cedula='"+cedula+"'");
            while (rs.next())
            {
                if(Integer.parseInt(rs.getString(6))!=1){
                    return true;
                }
               
            }
           
            st.close();
            conn.close();
            rs.close();
          return false;
            
        }
    }
    public void editar(String fecha_ini, String fecha_fin, Integer fir, Double kilo, Integer dias,int expirado) throws ClassNotFoundException, SQLException{
        DecimalFormat df = new DecimalFormat("#.000");
        Class.forName(driver);
        Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
        String SQL = "UPDATE contratos "
                + "SET fecha_inicio = ? "
                + ", fecha_fin = ? "
                + ", firmado = ? "
                + ", kilometros = ? "
                + ", meses = ? "
                  + ", token = ? "
                + "WHERE  cedula= ? AND token=0";
        try (Connection conn2 = conn;
            PreparedStatement pstmt = conn.prepareStatement(SQL)) {
 
            pstmt.setString(1, coFechaIniEdit.getDate().format(DateTimeFormatter.ISO_DATE));
            pstmt.setString(2, coFechaFinEdit.getDate().format(DateTimeFormatter.ISO_DATE));
            pstmt.setInt(3, fir);
            pstmt.setDouble(4, Double.parseDouble(df.format(kilo)));
            pstmt.setInt(5, dias);
            pstmt.setInt(6, expirado);
            pstmt.setString(7, cliEditBuscar.getText());
 
            pstmt.executeUpdate();
            coFechaIniEdit.setText("");
            coFechaFinEdit.setText("");
            coFirEdit.setText("");
            coKiloEdit.setValue(0);
            coMesesEdit.setText("");
            //Deshabilitar
            coFechaIniEdit.setEnabled(false);
            coFechaFinEdit.setEnabled(false);
            coFirEdit.setEnabled(false);
            coKiloEdit.setEnabled(false);
            coMesesEdit.setEnabled(false);
            coExpirado.setEnabled(false);
            pstmt.close();
            conn2.close();
            conn.close();
             JOptionPane.showMessageDialog(null, "Actualización exitosa");
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
      
    }
     public void eliminarContrato(String cedula) throws ClassNotFoundException, SQLException {
        
         if(tieneExpirados(cedula)==true){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (null, "Esta seguro de eliminar el contrato sin expirar del cliente con cédula "+cedula,"Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Class.forName(driver);
                Connection conn=(Connection) DriverManager.getConnection(ruta,user,password);
                String SQL = "DELETE FROM contratos WHERE cedula = ? AND token=0";
                try (Connection con = conn;
                        PreparedStatement pstmt = conn.prepareStatement(SQL)) {

                    pstmt.setString(1, cedula);
                    int n = pstmt.executeUpdate();
                    if(n>0){
                        JOptionPane.showMessageDialog(null,"Eliminación exitosa");
                    }else{
                        JOptionPane.showMessageDialog(null,"Error: Cliente inexistente");
                    }
                    pstmt.close();
                    con.close();
                    conn.close();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Cliente desconocido. Contácte con administrador");


                }
            }
           
         }else{
             JOptionPane.showMessageDialog(null, "Error: El cliente con la cédula ingresada no tiene contratos sin expirar.");
         }
       
     }
        
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cliEditBuscar;
    private javax.swing.JTable cliTabla;
    private javax.swing.JTextField coCedula;
    private javax.swing.JTextField coDias;
    private javax.swing.JCheckBox coExpirado;
    private com.github.lgooddatepicker.components.DatePicker coFechaFin;
    private com.github.lgooddatepicker.components.DatePicker coFechaFinEdit;
    private com.github.lgooddatepicker.components.DatePicker coFechaIni;
    private com.github.lgooddatepicker.components.DatePicker coFechaIniEdit;
    private javax.swing.JCheckBox coFir;
    private javax.swing.JCheckBox coFirEdit;
    private javax.swing.JSpinner coKilo;
    private javax.swing.JSpinner coKiloEdit;
    private javax.swing.JTextField coMesesEdit;
    private javax.swing.JTextField coPlaca;
    private javax.swing.JTextField filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
